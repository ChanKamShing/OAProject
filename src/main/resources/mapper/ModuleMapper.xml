<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjs.dao.ModuleDao">
    <resultMap id="moduleResultMap" type="module">
        <id property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="url" column="url"/>
        <result property="remark" column="remark"/>
        <result property="modifyDate" column="modify_date"/>
        <result property="createDate" column="create_date"/>
        <association property="modifier" javaType="user">
            <id property="userId" column="modifier_user_id"/>
            <result property="password" column="modifier_password"/>
            <result property="name" column="modifier_name"/>
            <result property="sex" column="modifier_sex"/>
        </association>
        <association property="creater" javaType="user">
            <id property="userId" column="creater_user_id"/>
            <result property="password" column="creater_password"/>
            <result property="name" column="creater_name"/>
            <result property="sex" column="creater_sex"/>
        </association>
    </resultMap>

    <resultMap id="getModuleByCodeResultMap" type="module">
        <id property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="url" column="url"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <select id="findModules" resultMap="moduleResultMap">
        select m.*,
            modifier.user_id as modifier_user_id,
            modifier.password as modifier_password,
            modifier.name as modifier_name,
            modifier.sex as modifier_sex,
            creater.user_id as creater_user_id,
            creater.name as creater_name,
            creater.password as creater_password,
            creater.sex as creater_sex
        from oa_id_module as m, oa_id_user as modifier, oa_id_user as creater
        where m.code like #{parentCode}
        and length(m.code) = #{sonCodeLen}
        and modifier.user_id = m.modifier
        and creater.user_id = m.creater
    </select>

    <select id="findOneByCode" parameterType="string" resultMap="moduleResultMap">
        select m.*,
            modifier.user_id as modifier_user_id,
            modifier.password as modifier_password,
            modifier.name as modifier_name,
            modifier.sex as modifier_sex,
            creater.user_id as creater_user_id,
            creater.name as creater_name,
            creater.password as creater_password,
            creater.sex as creater_sex
        from oa_id_module as m, oa_id_user as modifier, oa_id_user as creater
        where m.code = #{code}
        and modifier.user_id = m.modifier
        and creater.user_id = m.creater
    </select>

    <select id="findAllModules" resultMap="moduleResultMap">
        select m.*,
            modifier.user_id as modifier_user_id,
            modifier.password as modifier_password,
            modifier.name as modifier_name,
            modifier.sex as modifier_sex,
            creater.user_id as creater_user_id,
            creater.name as creater_name,
            creater.password as creater_password,
            creater.sex as creater_sex
        from oa_id_module as m, oa_id_user as modifier, oa_id_user as creater
        where modifier.user_id = m.modifier
        and creater.user_id = m.creater
    </select>

    <select id="findUniqueEntity" resultType="string">
        select max(m.code) from oa_id_module as m
        where m.code like #{parentCode}
        and length(m.code) = #{sonCodeLen}
    </select>

    <delete id="setCode" >
        delete from oa_id_module as m
        where m.code in
        <foreach collection="list" item="code" index="index"
                 open="(" close=")" separator=",">
            #{code}
        </foreach>
    </delete>

    <insert id="addModule" parameterType="module">
        insert into oa_id_module(code, name, url, remark, modifier, modify_date, creater, create_date);
        values (#{module.code},
                #{module.name},
                #{module.url},
                #{module.remark},
                #{module.modifier.userId},
                #{module.modifyDate},
                #{module.creater.userId},
                #{module.createDate})
    </insert>

    <select id="getModuleByCode" parameterType="string" resultMap="getModuleByCodeResultMap">
        select code, name, url, remark
        from oa_id_module
        where code = #{code}
    </select>

    <select id="countModules" resultType="int">
        select count(*)
        from oa_id_module as m
        where m.code like #{parentCode}
        and length(m.code) = #{sonCodeLen}
    </select>

    <select id="findModulesByPage" resultMap="moduleResultMap">
        select m.*,
            modifier.user_id as modifier_user_id,
            modifier.password as modifier_password,
            modifier.name as modifier_name,
            modifier.sex as modifier_sex,
            creater.user_id as creater_user_id,
            creater.name as creater_name,
            creater.password as creater_password,
            creater.sex as creater_sex
        from oa_id_module as m, oa_id_user as modifier, oa_id_user as creater
        where  modifier.user_id = m.modifier
        and creater.user_id = m.creater
        <if test="param != null and param.parentCode != null">and m.code like #{param.parentCode} and length(m.code) = #{param.sonLength}</if>
        <if test="pageModel != null">limit #{pageModel.firstLimitParam},#{pageModel.pageSize}</if>
    </select>

    <update id="updateModule" parameterType="module">
        update oa_id_module
        set modify_date = #{module.modifyDate},
            modifier = #{module.modifer.userId},
            name = #{module.name},
            remark = #{module.remark},
            url = #{module.url}
    </update>
</mapper>
